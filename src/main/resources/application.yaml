spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: "http://localhost:8081/realms/CostEngineering"

  # Need to disable the default ribbon loadbalancer because it will interfere with gateway filtering
  cloud:
    loadbalancer:
      ribbon:
        enabled: false

    gateway:
      routes:
        # Route that has a default uri and overrides the host being routed to based on a role in the token
        # A/B test type scenario, where you can direct traffic based on a condition
        - id: RoleBased
          uri: "http://localhost:9090"
          predicates:
            - Path=/service/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
            - name: RoleBasedRoutingFilter
              args:
                role: "ROLE_ADMIN"
                uri: "http://localhost:7171"
        # Load balanced route, note that there's no rate limiting applied at this time.
        - id: RoundRobinLoadbalanced
          uri: "lb://cleo" # reference to the cleo instances configured below
          predicates:
            - Path=/roundrobin/**

    # Load balancer setup, configured statically, but we can also go for service discovery here if we want to get really fancy
    discovery:
      client:
        simple:
          instances:
            cleo:
              - uri: "http://localhost:9090"
              - uri: "http://localhost:7171"

logging:
  level:
    reactor:
      netty: INFO
    redisratelimiter: DEBUG
    org:
      springframework:
        cloud:
          gateway: DEBUG